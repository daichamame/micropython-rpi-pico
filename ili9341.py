"""
    ILI9341(XPT2046)をMicroPythonで動かす
    Raspberry pi picoに以下のファイルを設置

    /lib/daichamame_ili9341.py
    /lib/fontloader.py
    /img/sample.bmp		デモ用ビットマップファイル(16ビットカラー)

    別途用意するもの：
    /font/shnm8x16r.bdf		東雲フォントのshnm8x16r.bdf

"""
import daichamame_ili9341
import fontloader
import time
import math
# 16x16のアイコン
icon32=(
[0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0C00,0x0188,0x0C00,0x0308,0x1E00,0x061C,0x1300,0x1E1C,0x3180,0x3C38,0x60C0,0x3878,0xE070,0x30F1,0x8038,0x31E3,0x001C,0x3387,0x1F8C,0x3F06,0x1F80,0x1E00,0x0000,0x3800,0x03F0,0x7080,0x7FF0,0xF0E0,0xFFF0,0xE078,0x1800,0xCFF8,0x1800,0xFFF8,0x3000,0xE608,0x61C0,0x0640,0xC0E0,0x4661,0x83F0,0x6E61,0x8FF8,0x6E61,0xBFB8,0x6E61,0xFC18,0x6601,0xC018,0x0701,0xC018,0x0600,0x0000,0x0000,0x0000,0x0000,0x0000],
[0x0000,0x0000,0x0090,0x0000,0x0891,0x0000,0x0492,0x0000,0x0204,0x0000,0x18F1,0x8000,0x05FA,0x0000,0x03FC,0x0000,0x3BFD,0xC000,0x03FC,0x0000,0x01F8,0xF800,0x08F3,0xFE00,0x1207,0xFF00,0x220F,0xFFC0,0x04FF,0xFFE0,0x03FF,0xFFE0,0x07FF,0xFFF0,0x0FFF,0xFFF0,0x1FFF,0xFFF0,0x3FFF,0xFFE0,0x1FFF,0xFFE0,0x1FFF,0xFFC0,0x0FFE,0xFF80,0x07FC,0x0040,0x0800,0x1240,0x0924,0x9240,0x0924,0x9200,0x0924,0x9040,0x0124,0x9240,0x0904,0x8240,0x0104,0x1240,0x0000,0x0000],
[0x0000,0x0000,0x000F,0xF800,0x0000,0x8000,0x01FF,0xFFC0,0x0100,0x8040,0x017E,0xBF40,0x0000,0x8000,0x007E,0xBF00,0x0000,0x0000,0x007F,0xFF00,0x0000,0x0100,0x007F,0xFF00,0x0000,0x0100,0x007F,0xFF00,0x0000,0x0000,0x0000,0x0030,0x0001,0xE030,0x0307,0xF800,0x030F,0xFC00,0x000D,0xEC00,0x000D,0xEC0C,0x006F,0xFC0C,0x0067,0xF980,0x0003,0xF180,0x1807,0xF800,0x180F,0xFC18,0x019F,0xFE18,0x019F,0xFE00,0x001F,0xFE00,0x001F,0xFE00,0x000F,0xFC00,0x0007,0xF800],
)

# メイン
if __name__ == "__main__":
    # /font/フォルダに 東雲フォントのshnm8x16r.bdfを表示用に利用
    fnt=fontloader.FontLoader("/font/shnm8x16r.bdf")
    shnmfont=fnt.load_font() # フォントデータを読み込む       
    lcd=daichamame_ili9341.ili9341(font_array=shnmfont,font_size=16,rotate=90)
    # 一面塗りつぶし処理(8回）
    lcd.clear(0x0000ff)
    lcd.clear(0x00ff00)
    lcd.clear(0x00ffff)
    lcd.clear(0xff0000)
    lcd.clear(0xff00ff)
    lcd.clear(0xffff00)
    lcd.clear(0xffffff)
    lcd.clear()
   
    #画像表示
    lcd.draw_bitmap('/img/sample.bmp')
    time.sleep(3)
    lcd.clear()

    # 線形描画
    for x  in range(0,320,40):
        lcd.line(0,0,320-x,240,x << 16 |(0xff-x) << 8 |0xa0)
        lcd.line(320,240,x,0,x << 16 |(0xff-x) << 8 |0xa0)
    for y  in range(0,240,40):
        lcd.line(0,0,320,240-y,y << 16 |(0xff-y) << 8 |0xa0)
        lcd.line(320,240,0,y,y << 16 |(0xff-y) << 8 |0xa0)
    time.sleep(3)
    lcd.clear()
    # 曲線描画
    for d in range(0,240,20):
        for x in range(0,320):
            y=240+int(math.sin(math.pi*(x+d)*2/90)*8)-d   # Y座標の計算
            lcd.pset(int(x), int(y), (0xff - x) << 16 |x << 8 |y)
    time.sleep(3)
    lcd.clear()

    # 文字表示処理
    start_time = time.ticks_ms()
    lcd.print( 0,  0,"0123456789+-/*",0xa0f0e0,ratio=2,bold=2)
    lcd.print( 0, 40,"ABCDEFGHIJKLMN",0xf0a0e0,ratio=2,bold=2)
    lcd.print( 0, 80,"OPQRSTUVWXYZ",0xa0e0f0,ratio=2,bold=2)
    lcd.print( 0,120,"ｱｲｳｴｵｶｷｸｹｺｻｼｽｾ",0xa080e0,ratio=2,bold=2)

    for i in range(3): 
        lcd.draw_icon(i*64,160,icon32[i],0x00ff88,32,ratio=2)            
    end_time = time.ticks_ms()
    elapsed_time = time.ticks_diff(end_time, start_time)
    print(f"文字表示処理時間: {elapsed_time} ミリ秒")
    time.sleep(3)
    lcd.clear()

    lcd.add_button(  0, 40, 80,100," ｸﾛ ",0xffffff,0x000000)
    lcd.add_button( 80, 40, 80,100," ｱｵ ",0xffff00,0x0000ff)
    lcd.add_button(160, 40, 80,100,"ﾐﾄﾞﾘ",0xff00ff,0x00ff00)
    lcd.add_button(240, 40, 80,100,"ｼｱﾝ ",0xff0000,0x00ffff)
    lcd.add_button(  0,140, 80,100," ｱｶ ",0x00ffff,0xff0000)
    lcd.add_button( 80,140, 80,100,"ﾏｾﾞﾝﾀ",0x00ff00,0xff00ff)
    lcd.add_button(160,140, 80,100,"ｷｲﾛ ",0x0000ff,0xffff00)
    lcd.add_button(240,140, 80,100," ｼﾛ ",0x000000,0xffffff)

    while 1:
        if lcd.touch_flag == True:
            (status,x,y,hit)=lcd.read_touch_position()
            if status == True and len(hit)>0:
                lcd.print(0,0,"x={:03d}:y={:03d}".format(x,y),0xffffff,ratio=1,bold=2)
                lcd.print(0,16,lcd.buttons[hit[0]][4]+"ｶﾞｵｻﾚﾏｼﾀ  ",0xffffff,ratio=1)
            lcd.touch_flag = False